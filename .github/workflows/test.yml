name: Tests

# This action should run on every commit
on: [push, pull_request]
env:
  # override poetry virtual env location
  # required for actions/setup-python@v3 can cache poetry correctly
  POETRY_VIRTUALENVS_IN_PROJECT: false

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v2.0.3
        env:
          # skip the check that throws on `main` branch
          SKIP: no-commit-to-branch
  d3lint:
    name: Lint D3 claims
    # Ideally this would be part of the .pre-commit-config.yaml,
    # but pre-commit cannot install python dependencies that are
    # not in the root folder of a Git repo (it's a subfolder).
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --pre d3-cli
      - name: Lint D3 claims
        run: d3-cli manufacturers --mode lint
  d3build:
    name: Run D3 Build
    environment:
      name: d3db-csv
      url: https://github.com/TechWorksHub/ManySecured-D3DB/tree/csv
    concurrency: d3db-csv # limit to a single-run build at a time
    permissions:
      # required to make a new commit in the `csv` branch
      contents: write
    runs-on: ubuntu-latest
    # d3build is slow, so only run if lint passes
    needs: [pre-commit, d3lint]
    # Only run on main branch, as the build is resource intensive
    if:
      contains('
        refs/heads/main
      ', github.ref)
    steps:
      - uses: actions/checkout@v3
      - name: Install d3-cli
        run: pip install --upgrade --pre d3-cli
      - name: Validate D3 files, convert to JSON and Export D3 JSON files into CSV
        run: d3-cli manufacturers --mode export --output D3DB --skip-mal
      - name: Deploy CSV files to `csv` branch (`main` branch only)
        if: github.ref == 'refs/heads/main'
        uses: s0/git-publish-subdir-action@v2.5.1
        env:
          REPO: self
          BRANCH: csv
          FOLDER: D3DB
          SKIP_EMPTY_COMMITS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-website:
    name: Run D3 Build of website for github pages
    environment:
      name: d3db-gh-pages
      url: https://github.com/TechWorksHub/ManySecured-D3DB/tree/gh-pages
    concurrency: d3db-gh-pages # limit to a single-run build at a time
    runs-on: ubuntu-latest
    # d3build is slow, so only run if lint passes
    needs: [pre-commit, d3lint]
    steps:
      - uses: actions/checkout@v3
      - name: Install graphviz
        run:  sudo apt-get update && sudo apt install graphviz
      - name: Install d3-cli
        run: pip install --upgrade --pre d3-cli
      - name: Validate D3 files, convert to JSON and Export D3 JSON files into static pelican website
        run: d3-cli manufacturers --mode website --output D3DB-site --skip-mal
      - name: Upload website files
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./D3DB-site/output
  deploy-website:
    name: publish website (main-branch only)
    if: github.ref == 'refs/heads/main'
    needs: build-website
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
