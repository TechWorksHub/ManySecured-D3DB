{
  "$id": "https://example.com/type.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "type",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "format": "uuid",
      "description": "GUID for the device type"
    },
    "parents": {
      "type": "array",
      "description": "Parent types to inherit from",
      "items": {
        "type": "object",
        "description": "Parent type to inherit from",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "GUID for the parent device type"
          },
          "properties": {
            "type": "array",
            "description": "List of properties to inherit by name, if none specified, will inherit all parent properties",
            "items": {
              "type": "string",
              "description": "Name of property to inherit"
            }
          }
        },
        "required": ["id"]
      }
    },
    "aliases": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of aliases for the device type"
    },
    "manufacturer": {
      "type": "string",
      "description": "The manufacturer name"
    },
    "manufacturerUri": {
      "type": "string",
      "format": "uri",
      "description": "The manufacturer URI path"
    },
    "modelNumber": {
      "type": "string",
      "description": "The model number of the device type"
    },
    "modelSupportUri": {
      "type": "string",
      "format": "uri",
      "description": "The model support URI of the device type"
    },
    "modelInformationUri": {
      "type": "string",
      "format": "uri",
      "description": "The model information URI of the device type"
    },
    "name": {
      "type": "string",
      "description": "The device type name"
    },
    "tags": {
      "type": "string",
      "pattern": "^#\\w+$|(#\\w+( |, |,))+#\\w+$",
      "description": "The array of strings with tags space or comma separated tags",
      "examples": [
        "#tag1",
        "#tag1 #tag2",
        "#tag1,#tag2",
        "#tag1, #tag2"
      ]
    },
    "macAddresses": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of MAC addresses"
    },
    "vulnerabilities": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of vulnerability IDs"
    },
    "behaviour": {
      "type": "string",
      "description": "The behaviour name or id for this device type"
    }
  },
  "required": ["id"]
}
